services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - msa-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=lms
    command: --bind-address=0.0.0.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - msa-network

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - msa-network

#  frontend:
#    container_name: frontend
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#      args:
#        - VITE_API_URL=http://gateway:9898
#    ports:
#      - "3000:3000"
#    networks:
#      - msa-network

  chat-service:
    container_name: chat-service
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    ports:
      - "9292:9292"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql
      - redis

  exam-service:
    container_name: exam-service
    build:
      context: ./exam-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "9898:9898"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql
      - redis

  lecture-service:
    container_name: lecture-service
    build:
      context: ./lecture-service
      dockerfile: Dockerfile
    ports:
      - "9696:9696"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql

  notice-service:
    container_name: notice-service
    build:
      context: ./notice-service
      dockerfile: Dockerfile
    ports:
      - "9797:9797"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql

  recruitment-service:
    container_name: recruitment-service
    build:
      context: ./recruitment-service
      dockerfile: Dockerfile
    ports:
      - "7979:7979"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - redis

  review-service:
    container_name: review-service
    build:
      context: ./review-service
      dockerfile: Dockerfile
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
    ports:
      - "9494:9494"
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql

  admin-service:
    container_name: admin-service
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    ports:
      - "9595:9595"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user123
      - MYSQL_DATABASE=lms
    networks:
      - msa-network
    depends_on:
      - eureka-server
      - mysql

#  nginx:
#    image: nginx:latest
#    container_name: nginx
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#    networks:
#      - msa-network
#    depends_on:
#      - frontend
#      - gateway
#      - eureka-server
#      - chat-service
#      - exam-service
#      - lecture-service
#      - notice-service
#      - recruitment-service
#      - review-service

networks:
  msa-network:
    driver: bridge
volumes:
  mysql_data:
